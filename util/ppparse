#!/usr/bin/env bash
set -eu

help_exit() {
  echo "  Usage: $0 [<--certs> | <-h>] <.mobileprovision file>"
  exit 0
}

parse_certs=false
args=()
while [ "$#" -gt 0 ] ; do
  case "$1" in
    --certs)
      parse_certs=true
      shift
      ;;
    -h)
      help_exit
      ;;
    *)
      if [[ "$1" =~ ^-.* ]] ; then
        echo "Unknown option $1"
        exit 1
      fi
      args+=("$1")
      shift
      ;;
  esac
done

set -- "${args[@]}"

ppfile="$1"
if ! [[ "$ppfile" =~ \.mobileprovision$ ]] ; then
  exit 1
fi

output_dir="$(basename "$ppfile" .mobileprovision)"
xml_file="${output_dir}/xml.mobileprovision"
certs_dir="${output_dir}/certs"

rm -rf "${output_dir}" 2>/dev/null || true
mkdir -p "$output_dir"

security cms -D -i "$ppfile" >"$xml_file"

if ! $parse_certs ; then
  exit
fi

get_name() {
  xmlstarlet sel -t -v "/plist/dict/key[text() = 'Name']/following-sibling::*[1]" "$xml_file"  2>/dev/null
}

get_team_name() {
  xmlstarlet sel -t -v "/plist/dict/key[text() = 'TeamName']/following-sibling::*[1]" "$xml_file"  2>/dev/null
}

get_developer_certs() {
  xmlstarlet sel -t -v "/plist/dict/key[text() = 'DeveloperCertificates']/following-sibling::*[1]" "$xml_file"  2>/dev/null
}

index=1
mkdir -p "$certs_dir"
{
  while line='' && read -r line || [ -n "$line" ] ; do
    if [[ "$line" =~ ^[[:space:]]*$ ]] ; then
      continue
    fi
    derfile="${certs_dir}/${index}.cer"
    textfile="${certs_dir}/${index}.txt"
    echo "$line" | base64 -d -i - -o "$derfile" || true
    openssl x509 -inform DER -in "$derfile" -text -noout >"$textfile" || true
    ((++index));
  done
} < <(get_developer_certs)

